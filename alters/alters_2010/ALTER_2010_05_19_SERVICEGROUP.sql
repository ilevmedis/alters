create table MED_SERVICEMASTERGROUPING
(
  SERVICEMASTERGROUPINGID NUMBER(38) not null,
  COMPANYID               NUMBER(38) not null,
  MNEMONIC                VARCHAR2(10) not null,
  DESCR                   VARCHAR2(50) not null,
  ISACTIVE                VARCHAR2(1) not null,
  CODEFORMAT              VARCHAR2(40) not null,
  ORDERSEQUENCE           NUMBER(38) not null
);

-- Create/Recreate primary, unique and foreign key constraints
alter table MED_SERVICEMASTERGROUPING
  add constraint PK_MED_SRVMASTERGROUPING primary key (SERVICEMASTERGROUPINGID, COMPANYID);

-- Create table
create table MED_SERVICEMASTERGROUPINGCODE
(
  SERVICEMASTERGROUPINGID   NUMBER(38) not null,
  SERVICEMASTERGROUPINGCODE VARCHAR2(40) not null,
  COMPANYID                 NUMBER(38) not null,
  MNEMONIC                  VARCHAR2(10) not null,
  DESCR                     VARCHAR2(50) not null,
  ISACTIVE                  VARCHAR2(1) not null,
  HASCHILDREN               VARCHAR2(1) not null,
  GRADE                     NUMBER(38) not null,
  ISDEFAULT                 VARCHAR2(1) not null
);

alter table MED_SERVICEMASTERGROUPINGCODE
  add constraint PK_MED_SRVMASTERGROUPINGCODE primary key (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID);

alter table MED_SERVICEMASTERGROUPINGCODE
  add constraint FK_MED_SRVMASTER_GROUPINGID foreign key (SERVICEMASTERGROUPINGID, COMPANYID)
  references MED_SERVICEMASTERGROUPING (SERVICEMASTERGROUPINGID, COMPANYID);

create index FK_MED_SRVMASTER_GROUPINGID on MED_SERVICEMASTERGROUPINGCODE (SERVICEMASTERGROUPINGID, COMPANYID);

create table MED_SERVICEMASTERGROUP
(
  SERVICEMASTERID           NUMBER(38) not null,
  SERVICEMASTERGROUPINGID   NUMBER(38) not null,
  COMPANYID                 NUMBER(38) not null,
  SERVICEMASTERGROUPINGCODE VARCHAR2(40) not null
);

alter table MED_SERVICEMASTERGROUP
  add constraint PK_MED_SERVICEMASTERGROUP primary key (SERVICEMASTERID, SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID);

alter table MED_SERVICEMASTERGROUP
  add constraint FK_MED_SRVMASTER_GROUPINGCODE foreign key (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID)
  references MED_SERVICEMASTERGROUPINGCODE (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID);

alter table MED_SERVICEMASTERGROUP
  add constraint FK_MED_SRVMASTER_GROUPING foreign key (SERVICEMASTERGROUPINGID, COMPANYID)
  references MED_SERVICEMASTERGROUPING (SERVICEMASTERGROUPINGID, COMPANYID);

alter table MED_SERVICEMASTERGROUP
  add constraint FK_MED_SERVICEMASTER foreign key (SERVICEMASTERID, COMPANYID)
  references MED_SERVICEMASTER (SERVICEMASTERID, COMPANYID) on delete cascade;


create index FK_MED_SRVMASTER_GROUPINGCODE on MED_SERVICEMASTERGROUP (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID);
create index FK_MED_SRVMASTER_GROUPING on MED_SERVICEMASTERGROUP (SERVICEMASTERGROUPINGID, COMPANYID);
create index FK_MED_SERVICEMASTER on MED_SERVICEMASTERGROUP (SERVICEMASTERID, COMPANYID);

--OBJECT USERS
create sequence SERVICEMASTER_OBJ_USERS_SEQ
minvalue 0
maxvalue 9999999999
start with 0
INCREMENT BY 1 NOCACHE;

INSERT INTO SYS_OBJECTUSERS(COMPANYID,ISPUBLICTOALLUSERS,OBJECTID,OBJECTPK,OBJECTUSERSID)
SELECT MED_SERVICEMASTER.COMPANYID, '1','MED_SERVICEMASTER',
  'MED_SERVICEMASTER.COMPANYID=' ||MED_SERVICEMASTER.COMPANYID||
  '|MED_SERVICEMASTER.SERVICEMASTERID='|| MED_SERVICEMASTER.SERVICEMASTERID,
 SERVICEMASTER_OBJ_USERS_SEQ.NEXTVAL+(SELECT A.COUNTER FROM SYS_SEQUENCE A WHERE A.OBJECTID = 'SYS_OBJECTUSERS')
  FROM MED_SERVICEMASTER;

UPDATE SYS_SEQUENCE SET COUNTER =
  (SELECT MAX(OBJECTUSERSID)+1 FROM SYS_OBJECTUSERS
     WHERE OBJECTID = 'MED_SERVICEMASTER')
WHERE OBJECTID = 'SYS_OBJECTUSERS';
COMMIT;

DROP sequence SERVICEMASTER_OBJ_USERS_SEQ;

-- Create table
create table MED_SERVICEGRPCODEITEMGRPCODE
(
  SERVICEGRPCODEITEMGRPCODEID number(38) not null,
  SERVICEMASTERGROUPINGID     number(38) not null,
  SERVICEMASTERGROUPINGCODE   varchar2(40) not null,
  FINITEMGROUPINGID           number(38) not null,
  FINITEMGROUPINGCODE         varchar2(40) not null,
  COMPANYID                   number(38) not null,
  FYEARID                     number(38) not null
);

alter table MED_SERVICEGRPCODEITEMGRPCODE
  add constraint PK_SRVGRPCODEITEMGRPCODE primary key (SERVICEGRPCODEITEMGRPCODEID, COMPANYID, FYEARID);
alter table MED_SERVICEGRPCODEITEMGRPCODE
  add constraint FK_SRVCGRPCODE_FINITEMGRPCODE foreign key (FINITEMGROUPINGID, FINITEMGROUPINGCODE, COMPANYID, FYEARID)
  references fin_itemgroupingcode (FINITEMGROUPINGID, FINITEMGROUPINGCODE, COMPANYID, FYEARID);
alter table MED_SERVICEGRPCODEITEMGRPCODE
  add constraint FK_SRVCGRPCODE_MEDSRVGRPCODE foreign key (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID)
  references med_servicemastERGROUPINGCODE (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID) on delete cascade;

create index FK_SRVCGRPCODE_FINITEMGRPCODE on MED_SERVICEGRPCODEITEMGRPCODE (FINITEMGROUPINGID, FINITEMGROUPINGCODE, COMPANYID, FYEARID);
create index FK_SRVCGRPCODE_MEDSRVGRPCODE on MED_SERVICEGRPCODEITEMGRPCODE (SERVICEMASTERGROUPINGID, SERVICEMASTERGROUPINGCODE, COMPANYID);

alter table MED_SERVICE add PROTOCOLNO varchar2(20);

alter table MED_SERVICEDOCTOR
  add constraint FK_SRVDOCTOR_DOCTORROLE foreign key (DOCTORROLEID, COMPANYID, FYEARID)
  references pbl_doctorrole (DOCTORROLEID, COMPANYID, FYEARID);
create index FK_SRVDOCTOR_DOCTORROLE on MED_SERVICEDOCTOR (doctorroleid, companyid, fyearid);

create table MED_SERVICESTATUSLOG
(
  SERVICESTATUSLOGID NUMBER(38) not null,
  COMPANYID          NUMBER(38) not null,
  SERVICEID          NUMBER(38) not null,
  NEWSERVICESTATUSID NUMBER(38) not null,
  SYSLOGDATE         DATE not null,
  SYSLOGTIME         TIMESTAMP(6) not null,
  LOGUSERNAME        VARCHAR2(20) not null,
  LOGDATE            DATE not null,
  LOGTIME            TIMESTAMP(6) not null,
  ISFIRSTLOG         VARCHAR2(1) not null
  );

alter table MED_SERVICESTATUSLOG
  add constraint PK_SERVICESTATUSLOG primary key (SERVICESTATUSLOGID, COMPANYID);

alter table MED_SERVICESTATUSLOG
  add constraint FK_SRVSTATUSLOG_MEDCLSTATUS foreign key (NEWSERVICESTATUSID, COMPANYID)
  references MED_MEDICALSTATUS (MEDICALSTATUSID, COMPANYID);
alter table MED_SERVICESTATUSLOG
  add constraint FK_SRVSTATUSLOG_SERVICE foreign key (SERVICEID, COMPANYID)
  references MED_SERVICE (SERVICEID, COMPANYID) on delete cascade;

create index FK_SRVSTATUSLOG_MEDCLSTATUS on MED_SERVICESTATUSLOG (NEWSERVICESTATUSID, COMPANYID);
create index FK_SRVSTATUSLOG_SERVICE on MED_SERVICESTATUSLOG (SERVICEID, COMPANYID);
create index LOGDATE_TIME_INDX on MED_SERVICESTATUSLOG (LOGDATE, LOGTIME);
